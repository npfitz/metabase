name: E2E Tests

on:
  push:
    branches:
      - "master"
      - "release-**"
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  files-changed:
    name: Check which files changed
    runs-on: ubuntu-20.04
    timeout-minutes: 3
    outputs:
      e2e_all: ${{ steps.changes.outputs.e2e_all }}
    steps:
      - uses: actions/checkout@v3
      - name: Test which files changed
        uses: dorny/paths-filter@v2.11.1
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/file-paths.yaml

  build:
    needs: files-changed
    if: github.event.pull_request.draft == false && needs.files-changed.outputs.e2e_all == 'true'
    runs-on: ubuntu-20.04
    timeout-minutes: 25
    strategy:
      matrix:
        edition: [oss]
    env:
      MB_EDITION: ${{ matrix.edition }}
      INTERACTIVE: false
    steps:
      - uses: actions/checkout@v3
      - name: Prepare front-end environment
        uses: ./.github/actions/prepare-frontend
      - name: Prepare back-end environment
        uses: ./.github/actions/prepare-backend
        with:
          m2-cache-key: e2e-tests

      - name: Build uberjar with ./bin/build
        run: ./bin/build version translations frontend licenses drivers uberjar

      - name: Prepare uberjar artifact
        uses: ./.github/actions/prepare-uberjar-artifact

  e2e-tests:
    needs: [build, files-changed]
    if: |
      always() &&
      needs.files-changed.outputs.e2e_all == 'true' &&
      needs.build.result == 'success'
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    name: e2e-tests-${{ matrix.folder }}${{ matrix.context }}-${{ matrix.edition }}
    env:
      MB_EDITION: ${{ matrix.edition }}
      DISPLAY: ""
      QA_DB_ENABLED: true
      MB_SNOWPLOW_AVAILABLE: true
      MB_SNOWPLOW_URL: "http://localhost:9090" # Snowplow micro
      ELECTRON_EXTRA_LAUNCH_ARGS: "--remote-debugging-port=40500" # deploysentinel
    strategy:
      fail-fast: false
      matrix:
        java-version: [11]
        edition: [ee]
        folder:
          - "admin"
          - "binning"
          - "collections"
          - "custom-column"
          - "dashboard"
          - "dashboard-filters"
          - "downloads"
          - "embedding"
          - "filters"
          - "joins"
          - "models"
          - "native"
          - "native-filters"
          - "onboarding"
          - "organization"
          - "permissions"
          - "question"
          - "sharing"
          - "visualizations"
        include:
          - edition: oss
            context: grep
            java-version: 11
    steps:
      - uses: actions/checkout@v3
      - name: Prepare front-end environment
        uses: ./.github/actions/prepare-frontend
      - name: Prepare JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: "temurin"
      - name: Prepare Cypress environment
        uses: ./.github/actions/prepare-cypress
      - name: Run Snowplow micro
        uses: ./.github/actions/run-snowplow-micro

      - uses: actions/download-artifact@v3
        name: Retrieve uberjar artifact for ${{ matrix.edition }}
        with:
          name: metabase-${{ matrix.edition }}-uberjar
      - name: Get the version info
        run: |
          jar xf target/uberjar/metabase.jar version.properties
          mv version.properties resources/

      - name: Run Cypress tests on ${{ matrix.folder }}
        run: |
          yarn run test-cypress-run \
          --folder ${{ matrix.folder }}
        env:
          TERM: xterm
